LLM: ChatGPT-4.
Date: April 2, 2024


User:
Error in read_parquet("data/analysis_data/cleaned_protest_data.parquet") : 
  could not find function "read_parquet"
ChatGPT
It seems like there's an error stating that the function read_parquet is not found. This typically happens when the function read_parquet is not available in the environment you're working in.

To resolve this issue, you need to make sure you have the necessary packages installed and loaded that provide the read_parquet function. In R, the read_parquet function is typically part of the arrow package.

You can install the arrow package using:

R
Copy code
install.packages("arrow")
Once installed, you can load the package using:

R
Copy code
library(arrow)
After loading the arrow package, you should be able to use the read_parquet function without any errors.

Error: IOError: Failed to open local file 'C:/Users/Mehrnoush/Documents/RStudio-Projects/Final paper/WomenLifeFreedom/paper/data/analysis_data/cleaned_protest_data.parquet'. Detail: [Windows error 3] The system cannot find the path specified.
4.
io___MemoryMappedFile__Open(path, mode)
3.
mmap_open(file)
2.
make_readable_file(file, mmap = mmap)
1.
read_parquet("data/analysis_data/cleaned_protest_data.parquet")

ChatGPT
The error message suggests that there is an issue with the path specified for the Parquet file. It seems like the system cannot find the file at the given path:

javascript
Copy code
C:/Users/Mehrnoush/Documents/RStudio-Projects/Final paper/WomenLifeFreedom/paper/data/analysis_data/cleaned_protest_data.parquet
Double-check the path to ensure that it is correct and that the file exists at that location. Make sure there are no typos in the path and that the file has the correct extension (.parquet).

If the file does exist at that location, ensure that your R session has the necessary permissions to access files in that directory.

Additionally, you might want to check if the file is indeed a Parquet file. Sometimes, file extensions can be misleading, so ensure that the file you're trying to read is actually in the Parquet format.

Once you've verified the path and ensured that the file exists, you should be able to read it using the read_parquet function without encountering the same error.

User:
the correct path is this: C:\Users\Mehrnoush\Documents\RStudio-Projects\Final paper\WomenLifeFreedom\data\analysis_data

ChatGPT
Thank you for providing the correct path. It seems like there was a discrepancy between the path specified and the actual location of the file.

To read the Parquet file located at C:\Users\Mehrnoush\Documents\RStudio-Projects\Final paper\WomenLifeFreedom\data\analysis_data\cleaned_protest_data.parquet, you can use the read_parquet function again with the correct path:

R
Copy code
library(arrow)
data <- read_parquet("C:/Users/Mehrnoush/Documents/RStudio-Projects/Final paper/WomenLifeFreedom/data/analysis_data/cleaned_protest_data.parquet")
Make sure to adjust the path accordingly when using it in your R script. With the correct path specified, you should be able to read the Parquet file without encountering the previous error.

protest_data  <- read_parquet("C:/Users/Mehrnoush/Documents/RStudio-Projects/Final paper/WomenLifeFreedom/data/analysis_data/cleaned_protest_data.parquet")
protest_data <- read_parquet("data/analysis_data/cleaned_protest_data.parquet")

User:
I want to write it like the second one but it doesn't work
ChatGPT
If you want to use a relative path like the second one ("data/analysis_data/cleaned_protest_data.parquet"), you need to ensure that your working directory is set correctly.

The second approach assumes that your working directory is already set to "C:/Users/Mehrnoush/Documents/RStudio-Projects/Final paper/WomenLifeFreedom/", and the data folder is directly inside this directory. If this is not the case, you can change your working directory using the setwd() function:

R
Copy code
setwd("C:/Users/Mehrnoush/Documents/RStudio-Projects/Final paper/WomenLifeFreedom/")
protest_data <- read_parquet("data/analysis_data/cleaned_protest_data.parquet")
Alternatively, you can use the here package to locate files relative to your script:

R
Copy code
library(here)
protest_data <- read_parquet(here("data/analysis_data/cleaned_protest_data.parquet"))
This approach does not rely on setting the working directory explicitly and can make your script more portable. Make sure to install and load the here package if you choose this method:

R
Copy code
install.packages("here")
library(here)
Either of these methods should allow you to use a relative path to read the Parquet file.

```{r}
#| label: fig-protest-trend
#| fig-cap: Trend of Protests over Time
#| echo: false

ggplot(protest_data, aes(x = as.Date(Date, format="%m/%d/%Y"), y = protests_number)) +
  geom_line() +
  labs(x = "Date", y = "Number of Protests") +
  ggtitle("Trend of Protests over Time")


ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar(alpha = 0.8) +
  scale_fill_manual(values = c("darkorange","purple","cyan4"),
                    guide = "none") +
  theme_minimal() +
  facet_wrap(~species, ncol = 1) +
  coord_flip()
```


Error in `geom_line()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error in `as.Date.default()`:
! do not know how to convert 'Date' to class “Date”
Backtrace:
  1. base (local) `<fn>`(x)
 19. base::as.Date.default(Date, format = "%m/%d/%Y")
 20. base::stop(...)
Error in geom_line() : 
ℹ Error occurred in the 1st layer.
Caused by error in `as.Date.default()`:
! do not know how to convert 'Date' to class “Date”
ChatGPT
The error message suggests that there's an issue with converting the 'Date' column in your protest_data dataframe to class "Date". It seems like the 'Date' column is already in a date format, but it's not recognized as such.

You might want to check the structure of your protest_data dataframe using str(protest_data) to ensure that the 'Date' column is indeed in a date-like format.

If the 'Date' column is already in a date-like format, you can try coercing it to class "Date" using the as.Date() function directly, without specifying the format:

r
Copy code
protest_data$Date <- as.Date(protest_data$Date)
Then, try your ggplot code again. If the 'Date' column is not in a date-like format, you may need to adjust the format argument in the as.Date() function accordingly to match the actual format of your dates in the 'Date' column.

Warning: Unknown or uninitialised column: `Date`.Error in `$<-`:
! Assigned data `as.Date(protest_data$Date)` must be compatible with existing data.
✖ Existing data has 158 rows.
✖ Assigned data has 0 rows.
ℹ Only vectors of size 1 are recycled.
Caused by error in `vectbl_recycle_rhs_rows()`:
! Can't recycle input of size 0 to size 158.
Backtrace:
 1. base::`$<-`(`*tmp*`, Date, value = `<date>`)
 2. tibble:::`$<-.tbl_df`(`*tmp*`, Date, value = `<date>`)
 3. tibble:::tbl_subassign(...)
 4. tibble:::vectbl_recycle_rhs_rows(value, fast_nrow(xo), i_arg = NULL, value_arg, call)
Error in `$<-`(`*tmp*`, Date, value = numeric(0)) : 
✖ Existing data has 158 rows.
✖ Assigned data has 0 rows.
ℹ Only vectors of size 1 are recycled.
Caused by error in `vectbl_recycle_rhs_rows()`:
! Can't recycle input of size 0 to size 158.
ChatGPT
It seems like there might be an issue with the 'Date' column in your protest_data dataframe. The error indicates that the column either doesn't exist or is not initialized properly.

Let's first make sure that the 'Date' column exists in your dataframe. You can check the column names using colnames(protest_data) or names(protest_data). If the column exists, it might not be named 'Date' exactly as expected.

Assuming the 'Date' column exists and its name is different, you can use the correct column name in the conversion. For example, if the column name is 'event_date', you would do:

r
Copy code
protest_data$event_date <- as.Date(protest_data$event_date)
Replace 'event_date' with the actual name of your date column.

If the column doesn't exist at all, you'll need to ensure that your dataframe contains the necessary data before trying to convert it. You might need to check your data import process to ensure that the 'Date' column is being read correctly.

After ensuring that the 'Date' column exists and is correctly initialized, you should be able to proceed with your ggplot code.

Quitting from lines 51-60 [fig-protest-trend] (paper.qmd)
Error in `geom_point()`:
! Problem while computing aesthetics.
i Error occurred in the 1st layer.
Caused by error:
! object 'protest_Date' not found
Backtrace:
  1. global .main()
 45. base::as.Date(protest_Date, format = "%m/%d/%Y")
                                                                                                                  
Execution halted
ChatGPT
The error message indicates that there's a problem with the aesthetics computation, particularly within the geom_point() function. It seems that there's an object called protest_Date that is not found.

To resolve this issue, you should check your code to ensure that you are referencing the correct object. It seems like there might be a typo in the object name.

If you intended to use the 'Date' column from your protest_data dataframe, you should refer to it using the correct column name. Assuming the column name is 'Date', your ggplot code should look something like this:

r
Copy code
ggplot(protest_data, aes(x = as.Date(Date, format="%m/%d/%Y"), y = protests_number)) +
  geom_point() +
  geom_line() +
  labs(x = "Date", y = "Number of Protests") +
  ggtitle("Trend of Protests over Time")
Make sure to replace "Date" with the actual column name if it's different.

Double-check your code and ensure that you are referencing the correct object name (protest_data) and column name (Date or whatever the actual column name is) throughout your code. This should resolve the error.

User:
I read my data like this

#### Read data ####
protest_data <- read_parquet("../data/analysis_data/cleaned_protest_data.parquet")
ChatGPT
To create a table from your dataset using kable in R, you first need to ensure that you have the necessary packages installed and loaded. You'll need the kableExtra package for extra customization options. You can install it using:

R
Copy code
install.packages("kableExtra")
Then, load the required packages:

R
Copy code
library(kableExtra)
Now, you can create a table using the kable function. Here's how you can do it with your dataset:

R
Copy code
# Assuming your data is already read into the protest_data dataframe

# Print the table using kable
kable(protest_data, format = "markdown")
This will generate a markdown table representation of your dataset. If you want to include additional customization such as formatting, you can use kableExtra functions. For example, to add table captions:

R
Copy code
# Print the table with a caption using kableExtra
kable(protest_data, format = "markdown") %>%
  kable_styling() %>%
  add_caption("Table: Protest Data")
Make sure to replace protest_data with the name of your dataframe containing the protest data. This code will generate a markdown table with the provided data. Adjust the code according to your specific requirements.

#| echo: false
#| include: true
#| warning: false
#| label: tbl-protest_data

kable(protest_data, 
      format = "markdown",
      align = "c",
      ) |>
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)



updating tlmgr

updating existing packages
ERROR: 
compilation failed- error
Missing \endcsname inserted.
<to be read again> 
                   \protect 
l.22 ...bl-protest\_data}{{1}{2}{Data}{table.1}{}}
                                                   

see paper.log for more information.
ChatGPT
The error you're encountering seems to be related to LaTeX compilation rather than the R code itself. It appears that there's an issue with the LaTeX code generated by kable_styling() function, possibly due to special characters or formatting in your dataframe.

To troubleshoot this issue, you can try simplifying your dataframe or removing any special characters that might be causing LaTeX compilation errors. Additionally, you can check the paper.log file mentioned in the error message for more detailed information about the LaTeX compilation failure.

If you continue to encounter issues, please provide more details about your dataframe and any special characters it might contain, so I can offer more targeted assistance.

User:
how can I do that?
ChatGPT
To simplify the process and avoid potential issues with LaTeX compilation, you can try generating a simpler markdown table directly from your dataframe without using kable_styling(). Here's how you can do it:

r
Copy code
# Assuming your data is already read into the protest_data dataframe

# Print the table using kable
kable(protest_data, format = "markdown")
This will generate a markdown representation of your dataframe without any special styling. You can then include this markdown table directly in your document.

If you have special characters or formatting in your dataframe that are causing issues with LaTeX compilation, you can try removing or replacing them before generating the table. For example, you can use the gsub() function to remove any special characters:

r
Copy code
# Replace special characters with empty string
protest_data_clean <- data.frame(lapply(protest_data, function(x) gsub("[^[:alnum:][:space:]]", "", x)))

# Print the table using kable
kable(protest_data_clean, format = "markdown")
This will generate a markdown table with special characters removed. You can then include this table in your document and see if it resolves the LaTeX compilation error. If you continue to encounter issues, please provide more details about the specific errors you're seeing, and I'll be happy to assist you further.

ggplot(protest_data, aes(x = as.Date(Date, format="%m/%d/%Y"), y = "Protests Number")) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")

print(protest_data)

why does it give me a straight line for the protest number?
ChatGPT
The issue you're encountering with geom_point producing a straight line for the protest number is likely due to using a character string "Protests Number" instead of referencing the actual column containing the number of protests.

Let's correct this issue by providing the correct column name for the y-axis in your ggplot code. Assuming the column containing the number of protests is named protests_number, you should use it directly in the aes() mapping. Here's the corrected code:

r
Copy code
library(ggplot2)

ggplot(protest_data, aes(x = as.Date(Date, format="%m/%d/%Y"), y = protests_number)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")
Ensure that protests_number is the correct column name containing the number of protests in your protest_data dataframe. By providing the correct column name, ggplot will plot the actual values instead of a straight line.

User:
I cleaned my data like this: 

#### Load data ####
raw_data <- read_csv("data/raw_data/Iran-protests-raw-data.csv")


# Clean data
cleaned_data <- raw_data |> 
  clean_names() |> 
  rename(
    Date = date,
    Arrested = number_of_individuals_arrested,
    'Security Killed' = number_of_military_security_personnel_killed,
    'Children Killed' = number_of_children_killed,
    'Detainees' = number_of_detainees_identified,
    'Arrested Students' = number_of_students_arrested,
    'Involved Cities' = number_of_cities_involved,
    'Universities' = number_of_universities_involved,
    'Protests Number' = number_of_protests,
    'Protestors Killed' = death_toll_of_protestors
  ) |> 
  mutate(
    Date = as.Date(Date, format = "%m/%d/%Y"),
  ) |> 
  distinct()

# Write cleaned data to output file
write_parquet(cleaned_data, "data/analysis_data/cleaned_protest_data.parquet")

print(cleaned_data)


ggplot(protest_data, aes(x = as.Date(Date, format="%m/%d/%Y"), y = "Protests Number")) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")

print(protest_data)

User:
why does it give me a straight line for the protest number?
ChatGPT
The issue with your ggplot code is that you're passing a character string "Protests Number" as the y-axis variable, rather than referencing the actual column containing the number of protests.

In your data cleaning process, you've renamed the column to 'Protests Number', so you should use this exact column name when plotting the data. Here's the corrected code:

r
Copy code
ggplot(cleaned_data, aes(x = Date, y = `Protests Number`)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")
Ensure that you are using backticks around the column name 'Protests Number' because it contains a space, and backticks are used to reference column names with spaces in ggplot2.

By using the correct column name, ggplot will plot the actual values from the 'Protests Number' column, and you should see the expected scatter plot instead of a straight line.

Error in `geom_point()`:
! Problem while computing aesthetics.
ℹ Error occurred in the 1st layer.
Caused by error:
! object 'Protests Number' not found
Backtrace:
  1. base (local) `<fn>`(x)
  2. ggplot2:::print.ggplot(x)
  4. ggplot2:::ggplot_build.ggplot(x)
  5. ggplot2:::by_layer(...)
 12. ggplot2 (local) f(l = layers[[i]], d = data[[i]])
 13. l$compute_aesthetics(d, plot)
 14. ggplot2 (local) compute_aesthetics(..., self = self)
 15. ggplot2:::scales_add_defaults(...)
 16. base::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)
 17. rlang (local) FUN(X[[i]], ...)
Error in geom_point(alpha = 0.8) : 
ℹ Error occurred in the 1st layer.
Caused by error:
! object 'Protests Number' not found
ChatGPT
It seems like there's still an issue with the column name. The error indicates that Protests Number is not found in your dataframe. This could be due to incorrect column names or referencing.

Since you've cleaned your data and renamed the column to 'Protests Number', ensure that you're using the correct column name in your ggplot code. Since the column name contains a space, you need to enclose it within backticks.

Here's the corrected ggplot code:

r
Copy code
ggplot(cleaned_data, aes(x = Date, y = `Protests Number`)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")
Make sure that cleaned_data contains the column 'Protests Number' after your data cleaning process. If there are still issues, double-check the column name and ensure it exactly matches what you've specified in the ggplot code.

#| label: fig-protest-trend
#| fig-cap: Trend of Protests in 158 DAYS (September 16, 2022 - February 21, 2023)
#| echo: false

ggplot(protest_data, aes(x = Date, y = Protests_Number)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")

print(protest_data)

Quitting from lines 66-76 [fig-protest-trend] (paper.qmd)
Error in `geom_point()`:
! Problem while computing aesthetics.
i Error occurred in the 1st layer.
Caused by error:
! object 'Protests_Number' not found
Backtrace:
  1. global .main()
  2. execute(...)
  3. rmarkdown::render(...)
  4. knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)
  5. knitr:::process_file(text, output)
     ...
 40. l$compute_aesthetics(d, plot)
 41. ggplot2 (local) compute_aesthetics(..., self = self)
 42. ggplot2:::scales_add_defaults(...)
 43. base::lapply(aesthetics[new_aesthetics], eval_tidy, data = data)
 44. rlang (local) FUN(X[[i]], ...)
ChatGPT
The error message indicates that Protests_Number is not found in your dataset protest_data. There might be a discrepancy in the column name. Ensure that the column name matches exactly what you have in your dataset.

Given your previous data cleaning steps where you renamed the column to 'Protests Number', you should use this exact name when referencing the column in ggplot.

Here's the corrected code:

r
Copy code
ggplot(protest_data, aes(x = Date, y = `Protests Number`)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")
Make sure that protest_data indeed contains a column named 'Protests Number'. If the column name is different, adjust it accordingly in the aes() function.

#| echo: false
#| include: true
#| warning: false
#| label: tbl-protest_data


kable(protest_data, 
      format = "markdown",
      align = "c",
      ) |>
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)

give table of protest number, detainees, and arrested table
ChatGPT
To create a table displaying the columns "Protests Number", "Detainees", and "Arrested" from the protest_data dataframe using the kable package in R, you can use the following code:

r
Copy code
library(kableExtra)

# Selecting columns "Protests Number", "Detainees", and "Arrested"
selected_columns <- protest_data[, c("Protests Number", "Detainees", "Arrested")]

# Generating the table
kable(selected_columns, format = "markdown", align = "c") %>%
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)
This code will create a table with the selected columns "Protests Number", "Detainees", and "Arrested" from the protest_data dataframe, formatted with kable and styled with kableExtra. Adjust the column names as per your dataframe if they are different.

updating existing packages
ERROR: 
compilation failed- error
Missing \endcsname inserted.
<to be read again> 
                   \protect 
l.15 ...bl-protest\_data}{{1}{2}{Data}{table.1}{}}
                                                   
User:
give me the correct version of this:
# Selecting columns "Protests Number", "Detainees", and "Arrested"
selected_columns <- protest_data[, c("Date","Protests_number", "Detainees", "Arrested")]

kable(head(selected_columns, 10), format = "markdown", align = "c") |>
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)
ChatGPT
It seems like there is an issue with the label you provided in the code snippet. The label should not contain special characters like underscores. Here's the corrected version of the code:

r
Copy code
# Selecting columns "Protests Number", "Detainees", and "Arrested"
selected_columns <- protest_data[, c("Date", "Protests_Number", "Detainees", "Arrested")]

kable(head(selected_columns, 10), format = "markdown", align = "c") %>%
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)
This code will select the specified columns from the protest_data dataframe, generate a table with the first 10 rows, format it using kable, and apply styling using kableExtra. Adjust the column names as per your dataframe if they are different.

installing knitr
ChatGPT
To install the knitr package in R, you can use the following command:

r
Copy code
install.packages("knitr")
This command will download and install the knitr package from CRAN (Comprehensive R Archive Network). After installation, you can load the package using the library function:

r
Copy code
library(knitr)
Then you can use the functions provided by the knitr package in your R code.

User:
give me 10 random dates for my table to show in 158 DAYS: September 16, 2022 - February 21, 2023

# Selecting columns "Protests Number", "Detainees", and "Arrested"
selected_columns <- protest_data[, c("Date", "Protesters.Killed", "Protests", "Detainees", "Arrested")]

kable(tail(selected_columns, 10), 
      format = "markdown", 
      align = "c",
      caption = "Dataset Compiled By HRANA",
      label = "tbl-protest_data")|>
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)
ChatGPT
To generate 10 random dates within the specified range (September 16, 2022 - February 21, 2023), you can use the sample function to randomly sample dates from a sequence of dates within that range. Here's how you can do it:

r
Copy code
# Generate a sequence of dates within the specified range
start_date <- as.Date("2022-09-16")
end_date <- as.Date("2023-02-21")
date_sequence <- seq(start_date, end_date, by = "day")

# Sample 10 random dates from the sequence
random_dates <- sample(date_sequence, 10)

# Convert the random dates to character format
random_dates <- as.character(random_dates)

# Selecting columns "Protests Number", "Detainees", and "Arrested" along with the random dates
selected_columns <- protest_data[protest_data$Date %in% random_dates, 
                                 c("Date", "Protesters.Killed", "Protests", "Detainees", "Arrested")]

# Display the table with the selected columns
kable(selected_columns, 
      format = "markdown", 
      align = "c",
      caption = "Dataset Compiled By HRANA",
      label = "tbl-protest_data") |>
  kable_styling(latex_options = c("striped", "hold_position"), bootstrap_options = "striped", full_width = FALSE)
This code will generate 10 random dates within the specified range and display the table with the selected columns, including the random dates.

#| label: fig-protests_protesters
#| include: true
#| fig-cap: Number of Protests and Protesters Killed In 158 Days
#| fig-subcap: [Number of Protests, Number of Protesters Killed]
#| layout-ncol: 2
#| warning: false
#| message: false
#| echo: false

ggplot(protest_data, aes(x = Date, y = Protests)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "Number of Protests")

ggplot(protest_data, aes(x = Date, y = Protesters.Killed)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Date", y = "The total Number of Protestors' Death")



compilation failed- error
Missing \endcsname inserted.
<to be read again> 
                   \protect 
l.20 ...}{Number of Protests}{figure.caption.1}{}}

It has problems with label, maybe?

User:                                                  
can you give me the plot in another way side by side?
ChatGPT
Certainly! You can create a single plot with both sets of data (Number of Protests and Number of Protesters Killed) side by side using facets. Here's how you can modify your code to achieve that:

r
Copy code
#| label: fig-protests_protesters
#| include: true
#| fig-cap: Number of Protests and Protesters Killed In 158 Days
#| fig-subcap: [Number of Protests, Number of Protesters Killed]
#| layout-ncol: 2
#| warning: false
#| message: false
#| echo: false

library(ggplot2)

# Combine Number of Protests and Protesters Killed into a single dataframe
combined_data <- rbind(
  transform(protest_data, variable = "Number of Protests", value = Protests),
  transform(protest_data, variable = "Number of Protesters Killed", value = Protesters.Killed)
)

# Plotting the combined data using facets
ggplot(combined_data, aes(x = Date, y = value)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  facet_wrap(~ variable, scales = "free_y", ncol = 2) +
  labs(x = "Date", y = NULL)
This code will create a single plot with two facets, one for the Number of Protests and another for the Number of Protesters Killed, displayed side by side.

